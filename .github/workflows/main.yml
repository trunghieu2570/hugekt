name: CI - Master
on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/default_deploy.key
          sudo chmod 600 ~/.ssh/default_deploy.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}

      # (optional - only needed if your config uses environment variables)
      - name: Create env file
        run: |
          touch .env
          echo TYPEORM_CONNECTION=${{ secrets.TYPEORM_CONNECTION }} >> .env
          echo TYPEORM_DATABASE=${{ secrets.TYPEORM_DATABASE }} >> .env
          echo TYPEORM_ENTITIES=${{ secrets.TYPEORM_ENTITIES }} >> .env
          echo TYPEORM_ENTITIES_DIR=${{ secrets.TYPEORM_ENTITIES_DIR }} >> .env
          echo TYPEORM_HOST=${{ secrets.TYPEORM_HOST }} >> .env
          echo TYPEORM_LOGGING=${{ secrets.TYPEORM_LOGGING }} >> .env
          echo TYPEORM_MIGRATIONS=${{ secrets.TYPEORM_MIGRATIONS }} >> .env
          echo TYPEORM_MIGRATIONS_DIR=${{ secrets.TYPEORM_MIGRATIONS_DIR }} >> .env
          echo TYPEORM_PASSWORD=${{ secrets.TYPEORM_PASSWORD }} >> .env
          echo TYPEORM_PORT=${{ secrets.TYPEORM_PORT }} >> .env
          echo TYPEORM_SYNCHRONIZE=${{ secrets.TYPEORM_SYNCHRONIZE }} >> .env
          echo TYPEORM_USERNAME=${{ secrets.TYPEORM_USERNAME }} >> .env

      - name: Install PM2
        run: npm i pm2 -g

      - name: Deploy
        run: env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ecosystem.config.js staging
        # Or alternately, put this deploy script in your package.json's scripts and run it using yarn/npm:
        # run: yarn deploy
